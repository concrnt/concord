{"id":"github.com/concrnt/concord","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/concrnt/concord REST API","title":"HTTP API Console","contact":{"name":"github.com/concrnt/concord"},"version":"version not set"},"paths":{"/concord.badge.Msg/CreateSeries":{"post":{"tags":["Msg"],"operationId":"GithubComconcrntconcordMsg_CreateSeries","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/concord.badge.MsgCreateSeries"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.MsgCreateSeriesResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concord.badge.Msg/MintBadge":{"post":{"tags":["Msg"],"operationId":"GithubComconcrntconcordMsg_MintBadge","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/concord.badge.MsgMintBadge"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.MsgMintBadgeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concord.badge.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComconcrntconcordMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/concord.badge.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concrnt/concord/badge/get_badge/{seriesId}/{badgeId}":{"get":{"tags":["Query"],"summary":"Queries a list of GetBadge items.","operationId":"GithubComconcrntconcordQuery_GetBadge","parameters":[{"type":"string","name":"seriesId","in":"path","required":true},{"type":"string","name":"badgeId","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.QueryGetBadgeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concrnt/concord/badge/get_badges_by_owner/{owner}":{"get":{"tags":["Query"],"summary":"Queries a list of GetBadgesByOwner items.","operationId":"GithubComconcrntconcordQuery_GetBadgesByOwner","parameters":[{"type":"string","name":"owner","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.QueryGetBadgesByOwnerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concrnt/concord/badge/get_series_by_owner/{owner}":{"get":{"tags":["Query"],"summary":"Queries a list of GetSeriesByOwner items.","operationId":"GithubComconcrntconcordQuery_GetSeriesByOwner","parameters":[{"type":"string","name":"owner","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.QueryGetSeriesByOwnerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/concrnt/concord/badge/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComconcrntconcordQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/concord.badge.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"concord.badge.Badge":{"type":"object","properties":{"badgeId":{"type":"string"},"classId":{"type":"string"},"creator":{"type":"string"},"description":{"type":"string"},"name":{"type":"string"},"owner":{"type":"string"},"transferable":{"type":"boolean"},"uri":{"type":"string"}}},"concord.badge.MsgCreateSeries":{"type":"object","properties":{"creator":{"type":"string"},"description":{"type":"string"},"name":{"type":"string"},"transferable":{"type":"boolean"},"uri":{"type":"string"}}},"concord.badge.MsgCreateSeriesResponse":{"type":"object"},"concord.badge.MsgMintBadge":{"type":"object","properties":{"creator":{"type":"string"},"receiver":{"type":"string"},"series":{"type":"string"},"uri":{"type":"string"}}},"concord.badge.MsgMintBadgeResponse":{"type":"object"},"concord.badge.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/concord.badge.Params"}}},"concord.badge.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"concord.badge.Params":{"description":"Params defines the parameters for the module.","type":"object","properties":{"create_series_cost":{"type":"string","format":"uint64"},"mint_badge_cost":{"type":"string","format":"uint64"}}},"concord.badge.QueryGetBadgeResponse":{"type":"object","properties":{"badge":{"$ref":"#/definitions/concord.badge.Badge"}}},"concord.badge.QueryGetBadgesByOwnerResponse":{"type":"object","properties":{"badges":{"type":"array","items":{"type":"object","$ref":"#/definitions/concord.badge.Badge"}}}},"concord.badge.QueryGetSeriesByOwnerResponse":{"type":"object","properties":{"series":{"type":"array","items":{"type":"object","$ref":"#/definitions/cosmos.nft.v1beta1.Class"}}}},"concord.badge.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/concord.badge.Params"}}},"cosmos.nft.v1beta1.Class":{"description":"Class defines the class of the nft type.","type":"object","properties":{"data":{"title":"data is the app specific metadata of the NFT class. Optional","$ref":"#/definitions/google.protobuf.Any"},"description":{"type":"string","title":"description is a brief description of nft classification. Optional"},"id":{"type":"string","title":"id defines the unique identifier of the NFT classification, similar to the contract address of ERC721"},"name":{"type":"string","title":"name defines the human-readable name of the NFT classification. Optional"},"symbol":{"type":"string","title":"symbol is an abbreviated name for nft classification. Optional"},"uri":{"type":"string","title":"uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional"},"uri_hash":{"type":"string","title":"uri_hash is a hash of the document pointed by uri. Optional"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}